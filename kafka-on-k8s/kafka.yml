apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-cfg
data: 
  custom-server.properties: |
    broker.id=0
    num.network.threads=3
    num.io.threads=8
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600
    log.dirs=/tmp/kafka-logs
    num.partitions=1
    num.recovery.threads.per.data.dir=1
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1
    log.retention.hours=168
    log.segment.bytes=1073741824
    log.retention.check.interval.ms=300000
    zookeeper.connect=zookeeper.3751:2181
    zookeeper.connection.timeout.ms=6000
    group.initial.rebalance.delay.ms=0
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: kafka
        image: cpretzer/kafka:2.4.0
        imagePullPolicy: Always
        ports:
        - containerPort: 9093
          name: admin
        volumeMounts:
        - name: logs
          mountPath: /tmp
        - name: conf
          mountPath: /tmp/kafka-cfg
      volumes:
      - name: conf
        configMap:
          name: kafka-cfg
  volumeClaimTemplates:
  - metadata:
      name: logs
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: kafka
  name: kafka
spec:
  ports:
  - name: admin
    port: 9093
    protocol: TCP
    targetPort: 9093